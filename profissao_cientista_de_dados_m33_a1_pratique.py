# -*- coding: utf-8 -*-
"""Profissao Cientista de Dados M33 A1 Pratique.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eREE08WeUrfYl-8xEURZ_NsozkJMddSs

# **MÓDULO 33 - Projeto Final de Modelos Avançados**

**Objetivo do Projeto:**

O objetivo deste projeto é aplicar os conceitos aprendidos nos módulos de conceitos avançados de modelagem para realizar uma segmentação de clientes utilizando o algoritmo de clustering K-Means. Ao final do projeto, você terá a oportunidade de consolidar seus conhecimentos em exploração de dados, pré-processamento, implementação e avaliação de modelos.

**Exploração de Dados:**

Inicie explorando o dataset fornecido, buscando entender as principais características das variáveis e a distribuição dos dados.

Realize análises descritivas, identifique padrões, e verifique a presença de valores ausentes ou inconsistências que precisem ser tratadas.

**Tratamento de Dados:**

Realize os tratamentos necessários como limpeza de dados, normalização ou padronização das variáveis, e, se necessário, a criação de variáveis derivadas.

Documente cada etapa do tratamento, explicando o motivo das escolhas feitas e como elas impactam no modelo.

**Implementação do Algoritmo K-Means:**

Aplique o algoritmo K-Means no dataset tratado. Defina o número de clusters (k).
Execute o algoritmo, ajuste os parâmetros conforme necessário, e documente o processo.

**Avaliação e Interpretação dos Resultados:**

Avalie a qualidade dos clusters gerados utilizando métricas adequadas.

Interprete os resultados, descrevendo as características de cada cluster e como eles podem ser utilizados para a segmentação de clientes.

Sugira aplicações práticas para os clusters identificados, como estratégias de marketing direcionadas ou personalização de ofertas.

**O dataset a ser utilizado neste projeto contém informações de 200 clientes, com os seguintes atributos:**

CustomerID: Identificador único atribuído a cada cliente.

Gender: Gênero do cliente.

Age: Idade do cliente.

Annual Income (k$): Renda anual do cliente em milhares de dólares.

Spending Score (1-100): Pontuação atribuída pelo shopping com base no
comportamento e padrão de gastos do cliente.

Notem que neste projeto vocês terão autonomia para criar os passos e justificar, sempre, os passos escolhidos.
"""

import plotly.express as px
import plotly.graph_objects as go
import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import seaborn as sns
from sklearn.preprocessing import LabelEncoder
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA

df = pd.read_csv('/content/Mall_Customers.csv')

df.head()

"""#Tratamento dos dados"""

df['Gender'].unique()

# Verificando Dados Nulos
df.isnull().sum()

le = LabelEncoder() # Usando encoder para transformar a variavel Gender em num
df['Gender_num'] = le.fit_transform(df['Gender']) # 1 Male 0 Female

# Dropando a Coluna Gender depois da transformacao e dropando a Customer Id por
# nao ser necessaria
df = df.drop(columns=['CustomerID', 'Gender'])

df.dtypes

# Nao parece ter Outliers
colunas_numericas = df.select_dtypes(include='number').columns

for col in colunas_numericas:
    plt.figure(figsize=(8, 1.5))
    sns.boxplot(x=df[col])
    plt.title(f'Boxplot de {col}')
    plt.show()

df.describe()

print(df['Gender_num'].value_counts(normalize=True) * 100)

df_padronizado = df.copy()
df_copia = df

# Padronizando para evitar que o modelo tenha um overfiting
scaler = StandardScaler()

df_padronizado = scaler.fit_transform(df)

df_padronizado

"""#K-menas"""

sns.pairplot(df) # Me parece ter dois Clusters

kmeans_cliente = KMeans (n_clusters=2, n_init=10, random_state=29)
kmeans_cliente.fit(df_padronizado)

labels = kmeans_cliente.labels_
labels

centroides = kmeans_cliente.cluster_centers_
centroides

centroides_padronizados = kmeans_cliente.cluster_centers_

centroides_originais = scaler.inverse_transform(centroides_padronizados)
centroides_originais

df['cluster'] = kmeans_cliente.labels_

print(df.head())

df_clusters = pd.DataFrame({
    'Annual Income (k$)': df['Annual Income (k$)'],
    'Spending Score (1-100)': df['Spending Score (1-100)'],
    'Gender_num': df['Gender_num'],
    'Age': df['Age'],
    'cluster': labels.astype(str)
})

fig = px.scatter(df_clusters, x='Annual Income (k$)', y='Spending Score (1-100)', color='cluster',
                 color_continuous_scale='viridis', opacity=0.7,
                 title='Clusters de Pinguins')

fig.add_scatter(x=centroides_originais[:, 0], y=centroides_originais[:, 1],
                mode='markers', marker=dict(color='red', symbol='x', size=14),
                name='Centroides')

fig.update_layout(xaxis_title='Annual Income (k$)', yaxis_title='Spending Score (1-100)',
                  legend_title='Cluesters')
fig.show() # Podemos ver que nem todos que ganhao muito por ano gastao muito

df_clusters = pd.DataFrame({
    'Annual Income (k$)': df['Annual Income (k$)'],
    'Spending Score (1-100)': df['Spending Score (1-100)'],
    'Gender_num': df['Gender_num'],
    'Age': df['Age'],
    'cluster': labels.astype(str)
})

fig = px.scatter(df_clusters, x='Gender_num', y='Age', color='cluster',
                 color_continuous_scale='viridis', opacity=0.7,
                 title='Clusters de Pinguins')

fig.add_scatter(x=centroides_originais[:, 0], y=centroides_originais[:, 1],
                mode='markers', marker=dict(color='red', symbol='x', size=14),
                name='Centroides')

fig.update_layout(xaxis_title='Gender_num', yaxis_title='Age',
                  legend_title='Cluesters')
fig.show()

plt.scatter(
    df['Age'], df['Spending Score (1-100)'], c=df['cluster'], cmap='viridis'
)
plt.xlabel('Idade')
plt.ylabel('Score de Gastos')
plt.title('Clusters de Clientes - K-means')
plt.show() # Pessoas mais jovens tendem a ter um score de gastos maior

resumo = df_copia.groupby('cluster').agg({
    'Age': ['mean', 'median'],
    'Annual Income (k$)': ['mean', 'median'],
    'Spending Score (1-100)': ['mean', 'median']
})
print(resumo) # Nosso cluster 1 tem uma media de idade bem mais baixa que o 0
# E gasta consideravelmente mais segundo a pontuacao do Score

"""Analisando os gráficos e a média dos clusters, podemos observar que o cluster 1 é formado por pessoas mais jovens e com maior nível de gastos. Dessa forma, o marketing pode ser direcionado a esse perfil.

Podemos realizar eventos para atrair mais do nosso público, além de identificar melhor os produtos que eles mais consomem, de modo a aumentar ainda mais esse engajamento e maximizar nossa estratégia de lucros.
"""